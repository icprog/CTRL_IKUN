<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="skinCode1.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAASJSURBVHhe7Zk9ctswEIV1iFwi49J9ZlxIJ8ikdJPSKZwZ
        1U6VGZfuXOgULtX4Cq5d+QLu04UBYIFcLB+IBQH+xN7iG0nk7gIEHnYBavPn72ujKCoExaFCUBwqBMWh
        QlAcKgTFoUJQHCoExaFCUBwqhAGO+02z2TB2d80zsP3fUSFwHq/6k494Z4JYjxBe7pqtHeD9A74/NVIB
        UDLE8Hy4MD4Xzf0Lvr80qxECT8PbwxO0q89Tc78L285B3M9AaOsTxDqE4LMB4foR2I3ioblmsVt2P5rv
        6HoWV80Rtot5ywydf73nLGMVQuhvykpXTNkqz0U+mV6URjysFC0tiOWFQLLBdn91+j5eCHCnn0mY7tOi
        kpYHnw0Ce5YNlxLE4kLoJo6ukrx06wDlZQyfb9GkDotBJgSfDSIiZ/0X7z0qsawQaDawD+6FINyNOxEZ
        20dWd4v4gtvmtZ0iWcWtf+pUtJAgFhVCkA3Mb/FgGbJKQBBvYPN4Ag5+9HgpyV6JbIAggpijXCwnBJ4N
        zDU/ualVIBYBEhRbcRCQkWIZQbRivYhy3pH4fpq+wPuVWUwIPBvQOjy0AoZSNMWuPPtpffynQyIEQ9AH
        oU9sxUuei+PHp1Y28H2M/vZfZgVkg04I8fRJRfDp9JmLTdPoeo/dIUMADJpRQElpJzeWKSpnA94+pbWh
        DnPRzwaW4TpKRXCeOM6tgpMYAnFDYYHnPQmkJBuEbcRp7anzPHSbtaC+toPU33xREWxvb9rvHOrD8fe5
        z5Rs95dv32MrHt0rhLZPQbaU2YXQTSpbCT5Nso2aaE/AfFLAGJOBM1yqDI4BtY/sEDMLgRzd2EpoJ5xe
        B/W1T8lgPoF4EYZW9RDfwIqP7Q1G0mvTgOyGmFUI0WxA7rXlQiQCQ2Y24MCYnGgb6XcSZ/BNZR1QexZk
        m2I+ISTqYnBciojADvxXfr1kVQnFNrRpS5auSqueg9pCdlLmLQ1ODCiVk3cI+/7kdP6/mjN2r3Sg0y+n
        UqUnkRUmEAJvA9nk4oRQK9h44oNJ7eCkFZaG1B9KHuxrSQjh7Ab4jIfHRzZjaIVQM2g2JlPQh4P9IaWF
        v0wqf/v2uzlnMRHYN71PcBjBYn8ZKCayG4uJN11wOf23fdymywaXzc/eCi49hgkn08B9B/cIp2zVZRzJ
        H1R9eFxkU4qJGzbiQcZTIGqbZAN3qqAbz4BwoP0kpTOGrDx4Wr9oP94ozVQoJrKrQbBZnKtRj7Qt9Eo6
        uVunCPYRWfEEiP6VTMBjIpta9E4NvPHaHUDxLcjWQY54fHBzJi+5OhOrO4cSEaB4yK428Pg4VWdK4h7N
        sRLW14ovntJHyRSle5WVCcFTs0M1YyEGs4P4LJ+3V+DgmGlQLAuynYosIXCQDwf5WZDtOigTgwfH7oN8
        Lch2SgaFQEGdHQOKvUpSJYdlGWiTCY03N2IhWFDnU6A47xX0/Cm8H481N1lCoNAHob/59Y+OHws+Lmsb
        o9FCUN4XKgTFoUJQHCoExaFCUBwqBMWhQlAcKgTFoUJQHCoExaFCUBwqBMXw2vwDSdtM4L2Ggp8AAAAA
        SUVORK5CYII=
</value>
  </data>
</root>