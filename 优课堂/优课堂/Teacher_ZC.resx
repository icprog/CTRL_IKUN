<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="skinCode1.CodeImg" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIIAAAA1CAYAAACNzDMwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQgSURBVHhe7Zg7eiIxDIA5yd5iD0BBLkNDwUHSUeQUKWmo
        0qdOlQuk325nscBjWZbkxzxZVPxfvoDH47F+yRo2f/7+dIZhIhiAiWAAJoIBmAgGYCIYgIlgACaCATyU
        COfjpttsHNvu9M2PMdp4DBEu+7sAd15euy9unNHMQ4jw9baNRTi+s+Pm4nwpv3+oYhzrqWwPIMJnd3qJ
        N/Bw4cZNjV9HWfB0AQgrqHAzihAHdPf2yYxh+H7tdnjTNvvuzI2bmD6wuaAl6w24Z06qm2dhGSYXQcuM
        IhlW0R+8d4eSNdO1ZqpHsjcLyjBLRRCz4EquzNPN0gKR3GekjQ3zaoENsgCFfYx/vuIKORGzHQ1aZZBl
        oP2BFAgShIihDRlagxLc6PkWLvMtzNosVstQ1B9wmUgEUgLos12UEa2hZMxw8ZZhVhEcNTIkpT4JKA44
        E4D+zJYaTCSRkMVhDXKTGq2z8EhYG7OL4CiVgY6jooTvpSz0oshZqp//QTTtDMfrFKvGyllEBIcsgw8I
        PffjQOEslDffB3LfHZj7wXW4rNNs7r+TRaLHkInQgCrDhfQHqHRjCdRuO+kxUtz1UmXpP1ebPxNhFGQZ
        CD5b8bu6eh7HAYqEid73r8H/4KoCrUhSj2AijEaJDLcNvm76cRtnuSADnpMNDhEqqQrJj0N3mOqA7zXa
        7wHXanaaUapViODQZaDZSLKVBKfs6ECZ7K5Hx0h0XDjROCmQgNFbg3qM5In2QZB8ClYjgkOUgd3cuCT3
        shQfHeh+MI7O5xB6BgSIRo8asbHMM6ZUNYAI/sb0yyVgZVA2pE4eTKgqfdWgmV8k4I3db/T/kEzGa1hK
        BA56weSwnb6eZVEWAfKPP55wDR4bB1k979U3kvaqED3LnEdDWHweboLx4TMu243TbNY2EY1Ngq19x0Hv
        62kKYoWII5P0CNHDVEDnGQJb7ks2lmYpV1rxmFzpryjNtzX/Cve+Uv0qGUmVr2pjkm0W3aL83xroPFVw
        WVYcFFpR8Ibitw1lo9H964KZVrPi64nEc1YDR/NbA35YSun3eL6Ihj6BElcVdy0OUm4uJExtw8asPRfU
        pALO2Bt4mkXgcA/h/7YQ5kgzy1FbatMmsnwefG11iWdFdqAqNGpvMZxRReBwD+f/jgGdPwvZ8PKSO6Aq
        AORHrwKqhRuRyUXIwW1IK9z8gM/Qymy7VYX2V0FAynzEkgJ4FheB4jfHBQ9v1hC4+zwz3B6tToSA3CfQ
        zzDuWu7zHP46vAbp8/8B/9w93KC1cOum20pz8qALo62Jrn0OknVwg56FZDMYpHGl13u08X49S/LUIpTg
        A6UFj36O/8997sBzLYWJYAAmggGYCAZgIhiAiWAAJoIBmAgGYCIYgIlgACaCAZgIBmAiGICJYAAmgnHl
        p/sH0rfA7tJ3WLgAAAAASUVORK5CYII=
</value>
  </data>
</root>